@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="hud-grounded @(IsAlive() && !IsFlying() ? "" : "hidden")">
		<div class="score-container">
			<div class="score-hint" style="text-align: right; align-items: flex-end;">
				<label class="score-label">Get a BUMP for each new obstacle you get close to.</label>
			</div>
			<div class="score-hint" style="text-align: left;">
				<label class="score-label">Continuously get SCRAPES by staying close to obstacles.</label>
			</div>
		</div>
	</div>
	<div class="hud-flying @(IsAlive() && IsFlying() ? "" : "hidden")">
		<div class="score-container">
			<div class="score-box" style="text-align: right;">
				<label class="score-label">BUMPS</label>
				<label class="score-number">@(GetBumps())</label>
			</div>
			<div class="score-box" style="text-align: left;">
				<label class="score-label">SCRAPES</label>
				<label class="score-number">@(GetScrapes())</label>
			</div>
		</div>
	</div>
	<div class="hud-dead @(IsAlive() ? "hidden" : "")">
		<label class="rip">YOU HAVE PERISHED</label>
		<div class="score-tally">

			<label class="score-label">SCRAPES: @(GetScrapes()) x1</label>
			<label class="score-label">BUMPS: @(GetBumps()) x@(CareFall.BUMP_SCORE_AMT)</label>
			<label class="score-label">FINAL SCORE: @(CareFall.BUMP_SCORE_AMT * GetBumps() + GetScrapes())</label>
			<label class="score-label"></label>
			<label class="score-label">PRESS '@(restartAct?.KeyboardCode.ToUpper())' TO RESTART</label>
		</div>
	</div>
</root>

@code
{
	private InputAction restartAct = Input.GetActions().FirstOrDefault( x => x.Name == "restart" );

	public int GetBumps()
	{
		return CareFall.Game.plr?.ScoreBumps ?? 0;
	}

	public int GetScrapes()
	{
		return (int)(CareFall.Game.plr?.ScoreScrapes ?? 0);
	}

	public bool IsAlive()
	{
		return CareFall.Game.plr?.Alive ?? false;
	}

	public bool IsFlying()
	{
		return CareFall.Game.plr?.Flying ?? false;
	}

	protected override int BuildHash() => System.HashCode.Combine(GetBumps(), GetScrapes(), IsAlive(), IsFlying());
}
